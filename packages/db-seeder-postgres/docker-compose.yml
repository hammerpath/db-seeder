services:
  db:
    container_name: db
    restart: always
    image: postgres:17-alpine
    env_file:
      - .env
    ports:
      - 5432:5432
    volumes:
      - ./init_pg_tables.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  db-seeder-postgres:
   container_name: db-seeder-postgres
   restart: always
   build:
    context: .
   ports:
      - "3000:3000"
   env_file:
      - .env
   environment:
      - POSTGRES_HOST=db
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
   depends_on:
      db:
        condition: service_healthy
   
  adminer:
    container_name: adminer
    image: adminer:5-standalone
    restart: always
    depends_on: 
      - db
    ports:
      - 8080:8080
